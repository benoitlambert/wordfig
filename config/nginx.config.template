add_header X-Content-Type-Options "nosniff" always;
add_header X-XSS-Protection "1; mode=block" always;
add_header X-Frame-Options "SAMEORIGIN" always;
add_header Referrer-Policy "strict-origin-when-cross-origin" always;

# Rate limiting global
limit_req_zone $binary_remote_addr zone=wp_limit:10m rate=10r/s;
limit_conn_zone $binary_remote_addr zone=wp_conn:10m;

# Configuration pour WordPress
server {
    listen 443 ssl http2;
    server_name ${DOMAIN_NAME} www.${DOMAIN_NAME};

    # Configuration SSL
    ssl_certificate /etc/letsencrypt/live/www.${DOMAIN_NAME}/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/www.${DOMAIN_NAME}/privkey.pem; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/${DOMAIN_NAME}/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/${DOMAIN_NAME}/privkey.pem; # managed by Certbot
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 1d;
    ssl_session_tickets off;
    
    # Gestion optimisée des fichiers statiques
    location ~* \.(css|js|jpg|jpeg|png|gif|ico|woff|woff2|ttf|svg|eot|webp)$ {
        proxy_pass http://127.0.0.1:${WP_PORT};
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_pragma;
        proxy_cache_revalidate on;
        expires max;
        add_header Cache-Control "public, max-age=31536000";
        access_log off;
        
        # Essayer de servir le fichier directement si disponible
        try_files $uri @wordpress;
    }
    
    # Gestion des requêtes wp-admin avec sécurité renforcée
    location ~ ^/wp-admin {
        limit_req zone=wp_limit burst=5 nodelay;
        limit_conn wp_conn 3;
        
        proxy_pass http://127.0.0.1:${WP_PORT};
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Augmenter les timeouts pour l'admin
        proxy_connect_timeout 300s;
        proxy_send_timeout 300s;
        proxy_read_timeout 300s;
    }
    
    # Requêtes dynamiques WordPress
    location / {
        # Limites spécifiques à WordPress
        limit_req zone=wp_limit burst=10 nodelay;
        limit_conn wp_conn 5;
        
        # Proxy vers le container WordPress
        proxy_pass http://127.0.0.1:${WP_PORT};
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
    }
    
    # Fallback pour les fichiers statiques
    location @wordpress {
        proxy_pass http://127.0.0.1:${WP_PORT};
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    
    # Protection contre les accès aux fichiers sensibles
    location ~ /\.(?!well-known).* {
        deny all;
    }
    
    # Protection contre les scripts malveillants
    location ~ \.(bak|config|sql|fla|md|psd|ini|log|sh|inc|swp|dist|test)$ {
        deny all;
    }
    
    # Désactiver l'accès direct aux fichiers PHP autres que index.php
    location ~ \.php$ {
        # Vérifier d'abord si le fichier est index.php
        if ($request_filename !~ "index\.php$") {
            return 403;
        }
        proxy_pass http://127.0.0.1:${WP_PORT};
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    
    # Redirection HTTP vers HTTPS
    if ($scheme != "https") {
        return 301 https://$host$request_uri;
    }
    
    # Buffer sizes
    client_max_body_size 20m;
    client_body_buffer_size 128k;
    
    # Compression GZIP
    gzip on;
    gzip_comp_level 5;
    gzip_min_length 256;
    gzip_proxied any;
    gzip_vary on;
    gzip_types
        application/atom+xml
        application/javascript
        application/json
        application/ld+json
        application/manifest+json
        application/rss+xml
        application/vnd.geo+json
        application/vnd.ms-fontobject
        application/x-font-ttf
        application/x-web-app-manifest+json
        application/xhtml+xml
        application/xml
        font/opentype
        image/bmp
        image/svg+xml
        image/x-icon
        text/cache-manifest
        text/css
        text/plain
        text/vcard
        text/vnd.rim.location.xloc
        text/vtt
        text/x-component
        text/x-cross-domain-policy;
}

# Redirection HTTP vers HTTPS
server {
    listen 80;
    server_name ${DOMAIN_NAME} www.${DOMAIN_NAME};
    
    location / {
        return 301 https://$host$request_uri;
    }
    
    # Pour le défi Let's Encrypt
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }
}
